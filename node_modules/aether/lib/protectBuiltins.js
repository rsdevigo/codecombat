(function() {
  var addGlobal, addedGlobals, builtinClones, builtinNames, builtinObjectNames, builtinReal, defineProperty, getOwnPropertyDescriptor, getOwnPropertyNames, globalScope, name, problems, replaceBuiltin, _, _i, _len, _ref, _ref1, _ref2;

  _ = (_ref = (_ref1 = (_ref2 = typeof window !== "undefined" && window !== null ? window._ : void 0) != null ? _ref2 : typeof self !== "undefined" && self !== null ? self._ : void 0) != null ? _ref1 : typeof global !== "undefined" && global !== null ? global._ : void 0) != null ? _ref : require('lodash');

  problems = require('./problems');

  module.exports.builtinObjectNames = builtinObjectNames = ['Object', 'Function', 'Array', 'String', 'Boolean', 'Number', 'Date', 'RegExp', 'Math', 'JSON', 'Error', 'EvalError', 'RangeError', 'ReferenceError', 'SyntaxError', 'TypeError', 'URIError'];

  module.exports.builtinNames = builtinNames = builtinObjectNames.concat(['NaN', 'Infinity', 'undefined', 'parseInt', 'parseFloat', 'isNaN', 'isFinite', 'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent']);

  getOwnPropertyNames = Object.getOwnPropertyNames;

  getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

  defineProperty = Object.defineProperty.bind(Object);

  globalScope = (function() {
    return this;
  })();

  builtinClones = [];

  builtinReal = [];

  module.exports.addedGlobals = addedGlobals = {};

  module.exports.addGlobal = addGlobal = function(name, value) {
    if (addedGlobals[name] != null) {
      return;
    }
    if (value == null) {
      value = globalScope[name];
    }
    return addedGlobals[name] = value;
  };

  for (_i = 0, _len = builtinObjectNames.length; _i < _len; _i++) {
    name = builtinObjectNames[_i];
    addGlobal(name);
  }

  module.exports.replaceBuiltin = replaceBuiltin = function(name, value) {};

}).call(this);

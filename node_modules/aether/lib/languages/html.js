(function() {
  var HTML, Language, _, _ref, _ref1, _ref2,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ = (_ref = (_ref1 = (_ref2 = typeof window !== "undefined" && window !== null ? window._ : void 0) != null ? _ref2 : typeof self !== "undefined" && self !== null ? self._ : void 0) != null ? _ref1 : typeof global !== "undefined" && global !== null ? global._ : void 0) != null ? _ref : require('lodash');

  Language = require('./language');

  module.exports = HTML = (function(_super) {
    __extends(HTML, _super);

    HTML.prototype.name = 'HTML';

    HTML.prototype.id = 'html';

    HTML.prototype.parserID = 'html';

    function HTML() {
      HTML.__super__.constructor.apply(this, arguments);
    }

    HTML.prototype.hasChangedASTs = function(a, b) {
      return a.replace(/\s/g) !== b.replace(/\s/g);
    };

    HTML.prototype.usesFunctionWrapping = function() {
      return false;
    };

    HTML.prototype.parse = function(code, aether) {
      return code;
    };

    HTML.prototype.replaceLoops = function(rawCode) {
      return [rawCode, []];
    };

    return HTML;

  })(Language);

}).call(this);
